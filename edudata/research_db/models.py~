# -*- coding: utf-8 -*-

import datetime
from django.utils import timezone
from django.db import models
from django.utils.translation import ugettext as _

"""
 This is a class representing Research project - an abstract concept of a research that consists of different datasets, materials used to conduct research and so on
"""

class Keyword(models.Model):
    keyword = models.CharField(max_length=100)
    
    def __unicode__(self):
        return self.keyword
    class Meta:
        ordering = ('keyword',)
        abstract = True


class Team(models.Model):
    name = models.CharField(max_length=12)
    fullname = models.CharField(max_length=100)
    team_members_to_contact = models.CharField(max_length=300)

class ResearchProject(models.Model):
    name = models.CharField(max_length=200)
    subcontractor = models.CharField(max_length=200)
    team          = models.ForeignKey(Team) ## FOREIGN KEY
    project_start = models.DateField()                                                                                                                                                                
    project_end   = models.DateField()
    keywords = models.ManyToManyField(ResearchKeyword) #MANY TO MANY

    def __unicode__(self):
            return(self.name)
    class Meta:
        ordering = ('name',)


class Dataframe(models.Model):
    name = models.CharField(max_length=200)
    
    research_project = models.ForeignKey(ResearchProject) # FOREIGN KEY
    
    observation_unit = models.CharField(max_length=200) 
    # TODO: Jednostka obserwacji: zdecydowac czy ENUM czy TEXT
    population = models.CharField(max_length=400)
    sampling_description = models.TextField()
    sample_size = models.IntegerField()
    respondent = models.CharField(max_length=200)
    research_methods = models.CharField(max_length = 300)
    collection_method = models.CharField(max_length = 200)
    keyword = models.ManyToManyField(DataframeKeyword) # MANY TO MANY
    df = models.FileField(
            upload_to="data/%Y/%m/%d/dataframes",
            max_length=200,
    )

    codebook = models.FileField(
            upload_to="data/%Y/%m/%d/codebooks",
            max_length=200,
    )

    class Meta:
        ordering = ('name',)

class ResearchKeyword(Keyword):
    pass


class DataframeKeyword(Keyword):
    pass


class Product(models.Model):
    product_name = models.CharField(max_length=200,
            choices = (
                (_(u'Narzędzie'),_(u'Narzędzie użyte do zbierania danych')),
                (_(u'Raport merytoryczny'),_(u'Raport merytoryczny')  ),
                (_(u'Raport metodologiczny'),_(u'Raport metodologiczny')),
                (_(u'Inne'),_(u'Inne')),
                )
            )
    dataframe = models.ForeignKey(Dataframe) #FOREIGN KEY
    product_file = models.FileField(
            upload_to = "data/%Y/%m/%d/products",
            max_length=200
            )


